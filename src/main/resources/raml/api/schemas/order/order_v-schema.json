{
  "title": "order with delivery date (volatile part)",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "javaType": "com.sos.joc.model.order.OrderV",
  "type": "object",
  "required": [
    "orderId",
    "workflowId",
    "state"
  ],
  "properties": {
    "deliveryDate": {
        "$ref": "../common/timestamp-schema.json"
    },
    "surveyDate": {
        "$ref": "../common/timestamp-schema.json"
    },
    "orderId": {
        "$ref": "../common/string255-schema.json"
    },
    "arguments":{
		"$ref": "../../../inventory/schemas/common/variables-schema.json"
	},
	"workflowId": {
		"$ref": "../../../controller/schemas/workflow/workflowId-schema.json"
	},
	"state": {
		"$ref": "orderState-schema.json"
	},
	"marked": {
		"$ref": "orderMark-schema.json"
	},
	"attachedState": {
		"$ref": "../../../controller/schemas/order/orderAttachedState-schema.json"
	},
	"agentId": {
		"type": "string"
	},
	"subagentId": {
		"type": "string"
	},
    "planId": {
        "$ref": "../plan/planId-schema.json"
    },
	"cycleState": {
		"$ref": "../../../controller/schemas/order/orderCycleState-schema.json"
	},
	"retryState": {
        "$ref": "../../../controller/schemas/order/orderRetryState-schema.json"
    },
    "sleepState": {
        "$ref": "../../../controller/schemas/order/orderSleepState-schema.json"
    },
    "expectedNotices": {
		"description": "if state._reason == EXPECTING_NOTICES",
		"type": "array",
		"items": {
			"$ref": "../../../controller/schemas/order/expectedNotice-schema.json"
		}	
	},
	"label": {
		"description": "a label is only in the response if the request restricts the orders to one workflow",
     	"type": "string",
  		"pattern": "^[^<>]*$",
  		"maxLength": 255
    },
    "tags": {
     	"$ref": "../common/tags-schema.json"
    },
	"position": {
     	"$ref": "../../../controller/schemas/common/position-schema.json"
    },
	"positionString": {
     	"$ref": "../common/string255-schema.json"
    },
    "positionIsImplicitEnd": {
     	"type": "boolean"
    },
    "endPositions": {
     	"$ref": "../../../controller/schemas/common/positionsOrLabels-schema.json"
    },
	"scheduledFor": {
      	"$ref": "../common/nonNegativeLong-schema.json"
    },
    "scheduledNever": {
        "description": "deprecated -> is State.PENDING",
      	"type": "boolean",
      	"default": false
    },
    "question": {
    	"description": "only relevant for state PROMPTING",
      	"type": "string"
    },
    "lastOutcome": {
      	"$ref": "../../../controller/schemas/common/outcome-schema.json"
    },
    "historicOutcome": {
    	"description": "only for compact parameter is false",
    	"type": "array",
  			"items": {
				"$ref": "../../../controller/schemas/workflow/historicOutcome-schema.json"
			}
    },
    "requirements": {
      	"$ref": "../../../inventory/schemas/workflow/orderRequirements-schema.json"
    },
	"cyclicOrder": {
		"$ref": "../orderManagement/dailyplan/cyclicOrder-schema.json"
	},
	"hasChildOrders": {
		"type": "boolean",
		"default": false	
	},
    "canLeave": {
        "description": "only relevant for state COMPLETED",
        "type": "boolean"  
    },
    "isContinuable": {
        "type": "boolean"  
    },
    "isResumable": {
        "type": "boolean"  
    },
    "isSuspendible": {
        "type": "boolean"  
    },
    "priority": {
        "type": "integer",
        "default": 0  
    }
  },
  "additionalProperties": false
}
